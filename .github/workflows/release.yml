name: Release

on:
  push:
    branches:
      - master

jobs:
  release-artifacts:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: Build with Gradle
        run: ./gradlew build
      - name: Release Artifacts
        env:
          GITHUB_USER: $GITHUB_ACTOR
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONATYPE_USER: ${{ secrets.SONATYPE_USER }}
          SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
          SIGN_KEY: ${{ secrets.GPG_KEY }}
          SIGN_PASSWORD: ${{ secrets.GPG_KEY_PASSWORD }}
        run: ./gradlew publish
      - name: Close and Release Repository
        env:
          GITHUB_USER: $GITHUB_ACTOR
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONATYPE_USER: ${{ secrets.SONATYPE_USER }}
          SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
          SIGN_KEY: ${{ secrets.GPG_KEY }}
          SIGN_PASSWORD: ${{ secrets.GPG_KEY_PASSWORD }}
        if: endsWith(env.VERSION, '-SNAPSHOT') == false
        run: ./gradlew closeAndReleaseRepository
  github-release:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - run: git fetch --prune --unshallow
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: Get project version
        run: |
          VERSION=$(./gradlew properties -q | grep "version:" | awk '{print $2}')
          echo "::set-env name=VERSION::$VERSION"
      - name: Get commits since last release
        run: |
          COMMITS=$(git log $(git describe --tags --abbrev=0)..HEAD --pretty=format:'- %s' --no-merges)
          echo "::set-env name=COMMITS::$COMMITS"
      - name: Create GitHub Release
        if: endsWith(env.VERSION, '-SNAPSHOT') == false
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ env.VERSION }}
          release_name: Release v${{ env.VERSION }}
          body: |
            Changes:
            ${{ env.COMMITS }}
